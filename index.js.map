{"version":3,"file":"index.js","sources":["../src/js/products-api.js","../src/js/refs.js","../src/js/render-function.js","../src/home.js"],"sourcesContent":["// Функції для роботи з бекендом\nimport axios from 'axios';\n\nexport async function allCategoryList() {\n  const { data } = await axios(`${BASE_URL}${END_POINT_category_list}`);\n  data.unshift('All');\n  return data;\n}\n\nconst BASE_URL = 'https://dummyjson.com/products'; // ???\n// const END_POINT_categories = '/categories';\nconst END_POINT_category_list = '/category-list';\n","//Обʼєкт з посиланнями на ДОМ елементи\n\nexport const refs = {};\n\nexport const categories = document.querySelector('.categories'); //  отримаємо ul.categories\nexport const products = document.querySelector('.products'); //  отримуємо ul.products\n","//Функцію для створення, рендеру або видалення розмітки\n\nimport { categories, products } from './refs';\n\nexport function markupList(data) {\n  const allList = data\n    .map(\n      category =>\n        `\n    <li class=\"categories__item\">\n      <button class=\"categories__btn\" type=\"button\">${category}</button>\n    </li>\n    `\n    )\n    .join('');\n  categories.insertAdjacentHTML('beforeend', allList);\n}\n","//Логіка сторінки Home\n\n//  1. При завантаженні сторінки Home отримай категорії товарів з API:\n//  Зроби запит на ендпоінт №5, отримай масив категорій. На початок отриманого масиву додай рядок “All” і відрендери категорії в списку ul.categories . Шаблон категорії:\n//  <li class=\"categories__item\">\n//     <button class=\"categories__btn\" type=\"button\"></button>\n//   </li>\n//  Стилізація списку категорій вже є в шаблоні репозиторію.\n\n////////////////////////////////////////////////////////////////////////////////\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { allCategoryList } from './js/products-api';\n\nimport { markupList } from './js/render-function';\n\nasync function initPage() {\n  try {\n    const data = await allCategoryList();\n    console.log(data); //отримаємо масив значень  - список усіх категорій\n    markupList(data);\n  } catch (error) {\n    console.log(error);\n    iziToast.error({\n      title: error.message,\n    });\n  }\n}\ninitPage();\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// зробити запит на сервер для отримання усіх категорій\n\n// async function allCategories() {\n//   const { data } = await axios(`${BASE_URL}${END_POINT_categories}`);\n//   // { data } - it is response.data\n//   return data;\n// }\n// //  категорії продуктів  має властивості - name    slug       url\n// allCategories()\n//   .then(data => {\n//     console.log(data); //отримаємо масив об'єктів з категоріями продуктів\n//   })\n//   .catch(error => {\n//     console.log(error.message);\n//   });\n\n//                               список категорій товарів - /category-list\n\n// ТЗ - При завантаженні основної сторінки в списку ul.categories рендериться список категорій продуктів, отриманих з бекенду.\n\n// ТЗ -  В списку ul.products рендериться список продуктів, отриманих з бекенда (з пагінацією 12 товарів).\n// треба обрати елемент зі писку та додати для відображення у наступну функцію - ???\n\n//  запит на сервер - список продуктів (з пагінацією 12 товарів)\n\n// async function allProducts() {\n//   const { data } = await axios(`${BASE_URL}?limit=12`);\n//   // { data } - it is response.data\n//   return data;\n// }\n\n// allProducts()\n//   .then(data => {\n//     console.log('1', data); // цікавить - products\n//     console.log(data.products); // масив об'єктів\n//   })\n//   .catch(error => {\n//     console.log(error.message);\n//   });\n\n//\n// ТЗ - Після списку продуктів зʼявляється кнопка loadMore для завантаження наступної порції продуктів. Якщо на бекенді не залишилось продуктів, кнопка loadMore приховується і зʼявляється повідомлення. Для повідомлень використовуємо бібліотеку iziToast.\n\n// у HTML додати розмітку кнопки loadMore  після  ul.products (hidden)\n// на цю кнопку вішаємо слухач та прописуємо функцію\n\n// const loadMore = document.querySelector('.load-more-btn');\n\n// loadMore.addEventListener('click', handleClickMore);\n\n// async function handleClickMore(event) {\n//   event.preventDefault();\n\n//   // loadMore.classList.remove('hidden');\n//   // loadMore.disabled = false;\n// }\n////////////////////////////////////////////////////////////////////////////////\n\n//  1. При завантаженні сторінки Home отримай категорії товарів з API:\n\n//  Зроби запит на ендпоінт №5, отримай масив категорій. На початок отриманого масиву додай рядок “All” і відрендери категорії в списку ul.categories . Шаблон категорії:\n//  <li class=\"categories__item\">\n//     <button class=\"categories__btn\" type=\"button\"></button>\n//   </li>\n\n//  Стилізація списку категорій вже є в шаблоні репозиторію.\n"],"names":["allCategoryList","data","axios","BASE_URL","END_POINT_category_list","categories","markupList","allList","category","initPage","error","iziToast"],"mappings":"2FAGO,eAAeA,GAAkB,CACtC,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMC,EAAM,GAAGC,CAAQ,GAAGC,CAAuB,EAAE,EACpE,OAAAH,EAAK,QAAQ,KAAK,EACXA,CACT,CAEA,MAAME,EAAW,iCAEXC,EAA0B,iBCPnBC,EAAa,SAAS,cAAc,aAAa,EACtC,SAAS,cAAc,WAAW,ECDnD,SAASC,EAAWL,EAAM,CAC/B,MAAMM,EAAUN,EACb,IACCO,GACE;AAAA;AAAA,sDAE8CA,CAAQ;AAAA;AAAA,KAGzD,EACA,KAAK,EAAE,EACVH,EAAW,mBAAmB,YAAaE,CAAO,CACpD,CCEA,eAAeE,GAAW,CACxB,GAAI,CACF,MAAMR,EAAO,MAAMD,IACnB,QAAQ,IAAIC,CAAI,EAChBK,EAAWL,CAAI,CAChB,OAAQS,EAAO,CACd,QAAQ,IAAIA,CAAK,EACjBC,EAAS,MAAM,CACb,MAAOD,EAAM,OACnB,CAAK,CACF,CACH,CACAD"}